

By Heikki K Lappalainen
Development of dawo dartlang package 2017 from 0.0.1 >

_____________________________________________________________________________


Way to version NEXT:  0.0.3 aso.
Theme:  Choose different Client / customer data and small, playing work-flow
To be published:  ~25.9.2017

#Questions:  1. Use JSON or #serialization
             2.
             3.
 #Waiting complications and hardships?  Yes.
 Value-effort values from 1-10:

3.1 DONE*7*7  incoming data in clay-folder, clay as synonym for data
            5 missions, 12 chores:  ['helsinkiGuide3-5','learnDartlang 4-6', 'myMusic 5',
                                     'myTime 3', 'nationalParks 1'];
            * Fill / create mission Classes; Helsinki, Dartlang, Music, myTime, Nature
            * Other customers data;  Helsinki, dartlang, music, time, park. (dawo/dev is original, always there)
            * dev data

3.2 ____*5*2   Choose customer in parameters. Add political-data  (test-case)

3.3 _-__7*4   Active "Rumba" flow / -example
           - app / mission / chore : all working together

3.4 _-__7*2  Fill generic lists with members (objects)
            Use generic lists inside classes for to control their "sub-ordinates"
            dawoApp has: missionL<Mission>
            mission has choreL<Chore>
            Roll methods for them

3,5 ____*2*2


3.6 ____*2*2 Collect Dev / team notes.

3.7 ____*3*3 Join one-happy-stream to dawo-rumba, for to get used to streams.
        *8*5    Add typedef, queue, enum, set, duration; just to showcase them

     ongoing::
3.8 ____*5*9  Connector, more ideas
3.9 ____*6*6  base_lib more ideas.
3.10 ____   ADD elements / boxes to web / HTML.

#Overall ____*9*7


_____________________________________________________________________________
Ready to version 0.0.2, completed fixes.
Theme : baseStructure, base_lib, dawo_mill(schema), connector(schema), learn/code_snippets
Publish to Pub: 10.9.-15.9.2017.  Release 0.0.2 in GitHub.

Value-effort values from 1-10:
2.1. DONE*2*2  Little roll / render example
2.2. DONE*4*2   Readme file, README.md, modified
2.3. DONE*1*1   Class constructors to every class

2.4. __e_*3*4   Import / export usage unclear. Get all files in one command.


2.5. DONE*5*5   Make Stream-play (sync) / explore file.  ( BOORING! ) no, it was interesting :)
          in code_snippets:  learn_stream_sync

2.6. DONE*7*5   Base structure class that important classes extend
          - includes: - INIT-BUILD-ROLL-SHOW-DONE cycle

2.7. DONE*5*3  StringBuffers to every important class and file for output.
          - this also adds visibility for variable-name

2.8. DONE*8*7  Start: Connector-class; Connect App-Mission-Chore classes functionality in mill-process
         - in this phase this is gonna be very elementary, schematic
         - At the end this is fine-graded and long development plan. ( DIFFICULT :( )

2.9. DONE*5*3 created DawoDewTest  class in dawo_dew

2.10. DONE*4*3 Add generic lists for every meaningful member
    * like: List<CommonChore> choreL = []
    * add usage later
Overall value-effort:  *6*5, time spent, maybe 30 hours, beginners style.

Overall problems:
- Is analyzer acting weird? It do not show variables (fast enough).
- Small uncertainty in libraries. When to import and export.
  * Import all in tests, for to be sure. And analyzer finds them quick.


_____________________________________________________________________________


Way to version:  0.0.4 aso.
Theme:  Statistics, output, variation, versatility.
To be published:  ? 10.10.2017 ?

4.1 ____  reasonable output.


4.2 ____  Solving Clients problems.





4.3 ____  roll counters to app, mission, chore, mill.

4.4 ____  render ( = test, presentation and quick-note function) to every file

4,5 ____  dev class. dev tester person.
            -every file imports dev, and can add dev-notes.

4.6 ____  Team notes (List and maps) maybe: in clay_in folder = incoming data
            * not yet clear idea, how this must be done.

4.7 ____  Use JSON, enums, set, Map, queues. Just for to show that you can.



4.8 ____  outGoing data methods in clayOut-folder.

4.9 ____  sketch more base_lib functionality.

4.10 ____ separate learnLib with its 3 files and collect it to one #learn-library.


_________________________________________________________________________

Version coming:  0.0.5 aso

class.init / done  should #deactivate #clients in <chore> aso. lists

Working rumba  is mark for  0.1.0  version

_________________________________________________________________________